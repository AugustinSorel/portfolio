<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>augustin</title>
    <script>
      const THEME_OWNER = document.documentElement;
      const THEME_STORAGE_KEY = "theme";

      const cachedTheme = localStorage.getItem(THEME_STORAGE_KEY);
      if (cachedTheme) {
        THEME_OWNER.dataset[THEME_STORAGE_KEY] = cachedTheme;
      }

      document.addEventListener("DOMContentLoaded", () => {
        const initialTheme = cachedTheme ?? "system";

        for (const container of document.querySelectorAll(
          "[data-theme-togglers]",
        )) {
          container.querySelector("input[checked]")?.removeAttribute("checked");
          container
            .querySelector(`input[value="${initialTheme}"]`)
            ?.setAttribute("checked", "");

          container.addEventListener("change", (e) => {
            const theme = (e.target as HTMLInputElement)?.value;
            if (theme === "system") {
              delete THEME_OWNER.dataset[THEME_STORAGE_KEY];
              localStorage.removeItem(THEME_STORAGE_KEY);
            } else {
              THEME_OWNER.dataset[THEME_STORAGE_KEY] = theme;
              localStorage.setItem(THEME_STORAGE_KEY, theme);
            }
          });
        }
      });
    </script>
    <script
      defer
      src="https://analytics.augustin-sorel.com/script.js"
      data-website-id="51f8056c-9e6d-4e55-8c1f-95debfcc2d12"></script>
    <noscript>
      <style>
        [data-theme-togglers] {
          display: none;
        }
      </style>
    </noscript>
  </head>
  <body
    class="bg-background text-foreground py-4 px-max-width transition-colors space-y-20"
  >
    <slot />
  </body>
</html>
<style is:global>
  html,
  html[data-theme="light"] {
    color-scheme: light;

    --foreground: 0 0 0%;
    --background: 0 0 100%;

    --muted: 0 0 95%;
    --muted-foreground: 0 0 40%;

    --ring: 0 0 0%;
  }

  html[data-theme="dark"] {
    color-scheme: dark;

    --foreground: 0 0 100%;
    --background: 0 0 0%;

    --muted: 0 0 5%;
    --muted-foreground: 0 0 60%;

    --ring: 0 0 100%;
  }

  @media (prefers-color-scheme: dark) {
    html:not([data-theme]) {
      color-scheme: dark;

      --foreground: 0 0 100%;
      --background: 0 0 0%;

      --muted: 0 0 5%;
      --muted-foreground: 0 0 60%;

      --ring: 0 0 100%;
    }
  }

  :root {
    --max-width: 40rem;
    --padding-max-width: max(calc((100vw - var(--max-width)) / 2), 1rem);
  }
</style>
